#include <GL/freeglut.h>
#include <iostream>
# define M_PI           3.14159265358979323846  /* pi */

//int radius = 100;
//int centerX = 320;        //example
//int centerY = 240;

void init() 
{
    glClearColor(1.0, 1.0, 1.0, 1.0);
    gluOrtho2D(0, 640, 0, 480);
}

void drawCirclePolarEquation(double radius, double centerX, double centerY) 
{
    glBegin(GL_LINE_LOOP);
    for (double angle = 0; angle <= 360; angle += 1) 
    {
        double x = centerX + radius * cos(angle * M_PI / 180);
        double y = centerY + radius * sin(angle * M_PI / 180);
        glVertex2i(x, y);
    }
    glEnd();
}

void display() 
{
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(0.0, 0.0, 0.0);

    int radius, centerX, centerY;
    printf("Enter Radius Of the Circle: ");
    scanf_s("%d", &radius);
    printf("Enter center X: ");
    scanf_s("%d", &centerX);
    printf("Enter center y: ");
    scanf_s("%d", &centerY);

    // Draw the circle using polar equations
    drawCirclePolarEquation(radius, centerX, centerY);
    glFlush();
}

int main(int argc, char** argv) 
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(640, 480);
    glutInitWindowPosition(500, 250);
    glutCreateWindow("Circle Drawing Using Polar Equations");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
}